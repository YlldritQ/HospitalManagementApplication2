[
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "CreateAppointment",
    "RelativePath": "api/Appointment",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "appointmentDto",
        "Type": "backend.Core.Dtos.Appointment.CUAppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "GetAppointmentById",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Appointment.AppointmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "UpdateAppointment",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "appointmentDto",
        "Type": "backend.Core.Dtos.Appointment.CUAppointmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "DeleteAppointment",
    "RelativePath": "api/Appointment/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "GetAllAppointments",
    "RelativePath": "api/Appointment/GetAllAppointments",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Appointment.AppointmentDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AppointmentController",
    "Method": "GetAppointmentsByUserId",
    "RelativePath": "api/Appointment/GetAppointmentsByUser/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Appointment.AppointmentDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "Login",
    "RelativePath": "api/Auth/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginDto",
        "Type": "backend.Core.Dtos.Auth.LoginDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Auth.LoginServiceResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "Me",
    "RelativePath": "api/Auth/me",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "token",
        "Type": "backend.Core.Dtos.Auth.MeDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Auth.LoginServiceResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "Register",
    "RelativePath": "api/Auth/register",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "registerDto",
        "Type": "backend.Core.Dtos.Auth.RegisterDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "SeedRoles",
    "RelativePath": "api/Auth/seed-roles",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "UpdateRole",
    "RelativePath": "api/Auth/update-role",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "updateRoleDto",
        "Type": "backend.Core.Dtos.Auth.UpdateRoleDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "Update",
    "RelativePath": "api/Auth/update/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "backend.Core.Dtos.Auth.UpdateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Auth.LoginServiceResponseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "GetUserNamesList",
    "RelativePath": "api/Auth/usernames",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.String, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "GetUsersList",
    "RelativePath": "api/Auth/users",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Auth.UserInfoResult, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "GetUserDetailsByUserName",
    "RelativePath": "api/Auth/users/{userName}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userName",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Auth.UserInfoResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.AuthController",
    "Method": "GetUserByIdAsync",
    "RelativePath": "api/Auth/usersId/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Auth.UserInfoResult",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "GetAllDepartments",
    "RelativePath": "api/Department",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[DepartmentDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "CreateDepartment",
    "RelativePath": "api/Department",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentDto",
        "Type": "backend.Core.Dtos.Department.CreateDepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "AddDoctorsToDepartment",
    "RelativePath": "api/Department/{departmentId}/doctors",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "doctorIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "RemoveDoctorsFromDepartment",
    "RelativePath": "api/Department/{departmentId}/doctors",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "doctorIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "AddNursesToDepartment",
    "RelativePath": "api/Department/{departmentId}/nurses",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "nurseIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "RemoveNursesFromDepartment",
    "RelativePath": "api/Department/{departmentId}/nurses",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "nurseIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "AddRoomsToDepartment",
    "RelativePath": "api/Department/{departmentId}/rooms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roomIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "RemoveRoomsFromDepartment",
    "RelativePath": "api/Department/{departmentId}/rooms",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roomIds",
        "Type": "System.Collections.Generic.IEnumerable\u00601[[System.Int32, System.Private.CoreLib, Version=8.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]]",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "GetDepartmentById",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "DepartmentDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "UpdateDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "departmentDto",
        "Type": "DepartmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DepartmentController",
    "Method": "DeleteDepartment",
    "RelativePath": "api/Department/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetAllDoctors",
    "RelativePath": "api/Doctor",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Doctor.DoctorDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "CreateDoctor",
    "RelativePath": "api/Doctor",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "doctorDto",
        "Type": "backend.Core.Dtos.Doctor.CUDoctorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "AssignRoomsToDoctor",
    "RelativePath": "api/Doctor/{doctorId}/rooms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "doctorId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "doctorRoomDto",
        "Type": "backend.Core.Dtos.Doctor.DoctorRoomManagementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "RemoveRoomsFromDoctor",
    "RelativePath": "api/Doctor/{doctorId}/rooms",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "doctorId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "doctorRoomDto",
        "Type": "backend.Core.Dtos.Doctor.DoctorRoomManagementDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetRoomsAssignedToDoctor",
    "RelativePath": "api/Doctor/{doctorId}/rooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "doctorId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetDoctorById",
    "RelativePath": "api/Doctor/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Doctor.DoctorDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "UpdateDoctor",
    "RelativePath": "api/Doctor/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "doctorDto",
        "Type": "backend.Core.Dtos.Doctor.CUDoctorDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "DeleteDoctor",
    "RelativePath": "api/Doctor/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetDoctorsByDepartmentId",
    "RelativePath": "api/Doctor/department/{departmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Doctor.DoctorDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetDoctorsWithNoDepartment",
    "RelativePath": "api/Doctor/noDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Doctor.DoctorDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.DoctorController",
    "Method": "GetDoctorByUserId",
    "RelativePath": "api/Doctor/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Doctor.DoctorDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LectureController",
    "Method": "GetAllLectures",
    "RelativePath": "api/Lecture",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.LectureDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LectureController",
    "Method": "CreateLecture",
    "RelativePath": "api/Lecture",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "LecturerDto",
        "Type": "backend.Core.Dtos.CULectureDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LectureController",
    "Method": "GetLecturesById",
    "RelativePath": "api/Lecture/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.LectureDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LectureController",
    "Method": "UpdateLecture",
    "RelativePath": "api/Lecture/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Lecturer",
        "Type": "backend.Core.Dtos.CULectureDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LectureController",
    "Method": "DeleteLecture",
    "RelativePath": "api/Lecture/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LecturerController",
    "Method": "GetAllLecturers",
    "RelativePath": "api/Lecturer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.LecturerDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LecturerController",
    "Method": "CreateLecturer",
    "RelativePath": "api/Lecturer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "LecturerDto",
        "Type": "backend.Core.Dtos.CULecturerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LecturerController",
    "Method": "GetLecturersById",
    "RelativePath": "api/Lecturer/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.LecturerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LecturerController",
    "Method": "UpdateDepartment",
    "RelativePath": "api/Lecturer/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "Lecturer",
        "Type": "backend.Core.Dtos.CULecturerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LecturerController",
    "Method": "DeleteLecturer",
    "RelativePath": "api/Lecturer/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.LogsController",
    "Method": "GetLogs",
    "RelativePath": "api/Logs",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Log.GetLogDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.LogsController",
    "Method": "GetMyLogs",
    "RelativePath": "api/Logs/mine",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Log.GetLogDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "GetAllMedicalRecords",
    "RelativePath": "api/MedicalRecord",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Records.MedicalRecordDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "CreateMedicalRecord",
    "RelativePath": "api/MedicalRecord",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "recordDto",
        "Type": "backend.Core.Dtos.Records.CUMedicalRecordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "GetMedicalRecordById",
    "RelativePath": "api/MedicalRecord/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Records.MedicalRecordDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "UpdateMedicalRecord",
    "RelativePath": "api/MedicalRecord/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "recordDto",
        "Type": "backend.Core.Dtos.Records.CUMedicalRecordDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "DeleteMedicalRecord",
    "RelativePath": "api/MedicalRecord/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.MedicalRecordController",
    "Method": "GetMedicalRecordByUserId",
    "RelativePath": "api/MedicalRecord/GetMedicalRecordByUser/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Records.MedicalRecordDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalStaffController",
    "Method": "GetAllMedicalStaff",
    "RelativePath": "api/MedicalStaff",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Staff.MedicalStaffDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalStaffController",
    "Method": "GetMedicalStaffById",
    "RelativePath": "api/MedicalStaff/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Staff.MedicalStaffDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.MedicalStaffController",
    "Method": "UpdateMedicalStaff",
    "RelativePath": "api/MedicalStaff/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "staffDto",
        "Type": "backend.Core.Dtos.Staff.MedicalStaffDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetAllNurses",
    "RelativePath": "api/Nurse",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Nurse.NurseDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "CreateNurse",
    "RelativePath": "api/Nurse",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nurseDto",
        "Type": "backend.Core.Dtos.Nurse.CUNurseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetNurseById",
    "RelativePath": "api/Nurse/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Nurse.NurseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "UpdateNurse",
    "RelativePath": "api/Nurse/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "nurseDto",
        "Type": "backend.Core.Dtos.Nurse.CUNurseDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "DeleteNurse",
    "RelativePath": "api/Nurse/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "AssignRoomsToNurse",
    "RelativePath": "api/Nurse/{nurseId}/rooms",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nurseId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "assignmentDto",
        "Type": "backend.Core.Dtos.Nurse.NurseRoomAssignmentDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "RemoveRoomsFromNurse",
    "RelativePath": "api/Nurse/{nurseId}/rooms",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nurseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetRoomsAssignedToNurse",
    "RelativePath": "api/Nurse/{nurseId}/rooms",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "nurseId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetNursesByDepartmentId",
    "RelativePath": "api/Nurse/department/{departmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Nurse.NurseDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetNursesWithNoDepartment",
    "RelativePath": "api/Nurse/noDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Nurse.NurseDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.NurseController",
    "Method": "GetNurseByUserId",
    "RelativePath": "api/Nurse/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Nurse.NurseDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "GetAllPatients",
    "RelativePath": "api/Patient",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Patient.PatientDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "CreatePatient",
    "RelativePath": "api/Patient",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "patientDto",
        "Type": "backend.Core.Dtos.Patient.CUPatientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "GetPatientById",
    "RelativePath": "api/Patient/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Patient.PatientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "UpdatePatient",
    "RelativePath": "api/Patient/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "patientDto",
        "Type": "backend.Core.Dtos.Patient.CUPatientDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "DeletePatient",
    "RelativePath": "api/Patient/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PatientController",
    "Method": "GetPatientByUserId",
    "RelativePath": "api/Patient/user/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Patient.PatientDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PlayerController",
    "Method": "GetAllPlayers",
    "RelativePath": "api/Player",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.PlayerDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PlayerController",
    "Method": "CreatePlayer",
    "RelativePath": "api/Player",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "teamDto",
        "Type": "backend.Core.Dtos.CUPlayerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PlayerController",
    "Method": "GetPlayersById",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.PlayerDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PlayerController",
    "Method": "UpdatePlayer",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "team",
        "Type": "backend.Core.Dtos.CUPlayerDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PlayerController",
    "Method": "DeletePlayer",
    "RelativePath": "api/Player/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PrescriptionController",
    "Method": "GetAllPrescriptions",
    "RelativePath": "api/Prescription",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Prescription.PrescriptionDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PrescriptionController",
    "Method": "CreatePrescription",
    "RelativePath": "api/Prescription",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "prescriptionDto",
        "Type": "backend.Core.Dtos.Prescription.CUPrescriptionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Prescription.PrescriptionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PrescriptionController",
    "Method": "GetPrescriptionById",
    "RelativePath": "api/Prescription/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Prescription.PrescriptionDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.PrescriptionController",
    "Method": "UpdatePrescription",
    "RelativePath": "api/Prescription/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "prescriptionDto",
        "Type": "backend.Core.Dtos.Prescription.CUPrescriptionDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.PrescriptionController",
    "Method": "DeletePrescription",
    "RelativePath": "api/Prescription/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetAllRooms",
    "RelativePath": "api/Room",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Room.RoomDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "CreateRoom",
    "RelativePath": "api/Room",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "roomDto",
        "Type": "backend.Core.Dtos.Room.CURoomDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetRoomById",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Room.RoomDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "UpdateRoom",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "roomDto",
        "Type": "backend.Core.Dtos.Room.CURoomDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "DeleteRoom",
    "RelativePath": "api/Room/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetRoomsByDepartmentId",
    "RelativePath": "api/Room/byDepartment/{departmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Room.RoomDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetRoomsWithNoDepartment",
    "RelativePath": "api/Room/noDepartment",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Room.RoomDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetUnassignedRooms",
    "RelativePath": "api/Room/unassignedDocs/{departmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Room.RoomDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.RoomController",
    "Method": "GetUnassignedRoomsToNurses",
    "RelativePath": "api/Room/unassignedNurses/{departmentId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "departmentId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Room.RoomDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.TeamController",
    "Method": "GetAllTeams",
    "RelativePath": "api/Team",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.TeamDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.TeamController",
    "Method": "CreateTeam",
    "RelativePath": "api/Team",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "teamDto",
        "Type": "backend.Core.Dtos.CUTeamDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TeamController",
    "Method": "GetTeamsById",
    "RelativePath": "api/Team/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.TeamDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.TeamController",
    "Method": "UpdateDepartment",
    "RelativePath": "api/Team/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "team",
        "Type": "backend.Core.Dtos.CUTeamDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TeamController",
    "Method": "DeleteTeam",
    "RelativePath": "api/Team/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TestController",
    "Method": "GetAdminData",
    "RelativePath": "api/Test/get-admin-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TestController",
    "Method": "GetPublicData",
    "RelativePath": "api/Test/get-public",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.TestController",
    "Method": "GetUserData",
    "RelativePath": "api/Test/get-user-role",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  }
]