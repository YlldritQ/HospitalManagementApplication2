version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:7058
      - NEXT_PUBLIC_NODE_API_URL=http://localhost:4000
      - WATCHPACK_POLLING=true
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - node-backend
      - dotnet-backend

  node-backend:
    build:
      context: ./node
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/hospital
      - PORT=4000
      - NODE_ENV=development
    depends_on:
      - mongodb

  dotnet-backend:
    build:
      context: ./.NET
      dockerfile: Dockerfile
    ports:
      - "7058:7058"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:7058
      - ConnectionStrings__local=Server=sqlserver;Database=HospitalManagement2;User Id=sa;Password=Your_password123;TrustServerCertificate=True;
      - JWT__ValidIssuer=http://dotnet-backend:7058
      - JWT__ValidAudience=http://frontend:3000
      - JWT__Secret=asdasldnalsnQSHDAJS23EWJHDHAEH9Q12DNA
    depends_on:
      - sqlserver

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=Your_password123
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=hospital

volumes:
  mongodb_data:
  sqlserver_data: 